parameters:
  graphql.config:
    # Development mode:
    #
    # Enables debugging mode and disables field security and caching.
    #
    # When enabled, all fields can be resolved without restrictions
    # and the caching strategy of the schema and query results is
    # disabled entirely.
    #
    # @default false
    development: false

services:
  # Check access for executing graphql queries.
  access_check.graphql.query:
    class: Drupal\graphql\Access\QueryAccessCheck
    arguments: ['@request_stack']
    tags:
      - { name: access_check, applies_to: _graphql_query_access }

  # Logger channel for graphql related logging.
  logger.channel.graphql:
    parent: logger.channel_base
    arguments: ['graphql']

  # Cache bin for the parsed sdl ast.
  cache.graphql.ast:
    class: Drupal\Core\Cache\CacheBackendInterface
    tags:
      - { name: cache.bin }
    factory: cache_factory:get
    arguments: [graphql_ast]

  # Cache bin for graphql plugin definitions.
  cache.graphql.definitions:
    class: Drupal\Core\Cache\CacheBackendInterface
    tags:
      - { name: cache.bin }
    factory: cache_factory:get
    arguments: [graphql_definitions]

  # Cache bin for graphql query results.
  cache.graphql.results:
    class: Drupal\Core\Cache\CacheBackendInterface
    tags:
      - { name: cache.bin }
    factory: cache_factory:get
    arguments: [graphql_results]

  # Schema and processor factory.
  graphql.query_processor:
    class: Drupal\graphql\GraphQL\Execution\QueryProcessor
    arguments:
      - '@cache_contexts_manager'
      - '@plugin.manager.graphql.schema'
      - '@cache.graphql.results'
      - '@request_stack'
      - '@graphql.buffer.cache'

  # Upcasting for graphql query request parameters.
  graphql.route_enhancer.query:
    class: Drupal\graphql\Routing\QueryRouteEnhancer
    tags:
      - { name: route_enhancer }

  # Schema introspection service.
  graphql.introspection:
    class: Drupal\graphql\GraphQL\Utility\Introspection
    arguments: ['@graphql.query_processor']

  # Support for subrequests.
  graphql.subrequest_subscriber:
    class: Drupal\graphql\EventSubscriber\SubrequestSubscriber
    tags:
      - { name: event_subscriber }

  # Context repository for fetching contexts from sub-requests.
  graphql.context_repository:
    class: Drupal\graphql\GraphQL\Context\ContextRepository
    tags:
      - { name: service_collector, tag: context_provider, call: addContextProvider }

  # Plugin manager for schemas
  plugin.manager.graphql.schema:
    class: Drupal\graphql\Plugin\SchemaPluginManager
    arguments:
      - 'Plugin/GraphQL/Schema'
      - '@container.namespaces'
      - '@module_handler'
      - '@cache.graphql.definitions'
      - '\Drupal\graphql\Plugin\SchemaPluginInterface'
      - '\Drupal\graphql\Annotation\Schema'
      - '%graphql.config%'

  plugin.manager.graphql.data_producer:
    class: Drupal\graphql\Plugin\DataProducerPluginManager
    arguments:
      - 'Plugin/GraphQL/DataProducer'
      - '@container.namespaces'
      - '@module_handler'
      - '@cache.graphql.definitions'
      - '\Drupal\graphql\Plugin\DataProducerPluginInterface'
      - '\Drupal\graphql\Annotation\DataProducer'
      - '%graphql.config%'

  # Buffers.
  graphql.buffer.entity:
    class: Drupal\graphql\GraphQL\Buffers\EntityBuffer
    arguments: ['@entity_type.manager']
  graphql.buffer.entity_uuid:
    class: Drupal\graphql\GraphQL\Buffers\EntityUuidBuffer
    arguments: ['@entity_type.manager']
  graphql.buffer.subrequest:
    class: Drupal\graphql\GraphQL\Buffers\SubRequestBuffer
    arguments: ['@http_kernel', '@request_stack']
  graphql.buffer.cache:
    class: Drupal\graphql\GraphQL\Buffers\CacheBuffer
    arguments: ['@entity_type.manager', '@cache.graphql.results'  ]

  # Contextual language handling https://www.drupal.org/project/drupal/issues/2952789
  graphql.language_context:
    class: Drupal\graphql\Language\LanguageContext
    arguments: ['@language_manager']
  graphql.config_factory_override:
    class: Drupal\graphql\Language\ConfigOverrides
    arguments: ['@config.storage', '@?plugin.manager.language_negotiation_method']
    tags:
      - { name: config.factory.override, priority: -253 }
